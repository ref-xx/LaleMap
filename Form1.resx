<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>